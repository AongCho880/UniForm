/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as StudentRouteImport } from './routes/student'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as InstitutionRouteImport } from './routes/institution'
import { Route as HelpRouteImport } from './routes/help'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as CookiesRouteImport } from './routes/cookies'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StudentIndexRouteImport } from './routes/student/index'
import { Route as InstitutionIndexRouteImport } from './routes/institution/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as StudentSettingsRouteImport } from './routes/student/settings'
import { Route as StudentInstitutionsRouteImport } from './routes/student/institutions'
import { Route as StudentDashboardRouteImport } from './routes/student/dashboard'
import { Route as StudentApplicationsRouteImport } from './routes/student/applications'
import { Route as StudentAcademicInfoRouteImport } from './routes/student/academic-info'
import { Route as InstitutionSettingsRouteImport } from './routes/institution/settings'
import { Route as InstitutionProfileRouteImport } from './routes/institution/profile'
import { Route as InstitutionDashboardRouteImport } from './routes/institution/dashboard'
import { Route as InstitutionApplicationsRouteImport } from './routes/institution/applications'
import { Route as AdminVisualizationRouteImport } from './routes/admin/visualization'
import { Route as AdminSettingsRouteImport } from './routes/admin/settings'
import { Route as AdminProfileRouteImport } from './routes/admin/profile'
import { Route as AdminInstitutionsRouteImport } from './routes/admin/institutions'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminAdminsRouteImport } from './routes/admin/admins'
import { Route as AuthUnauthorizedRouteImport } from './routes/_auth/unauthorized'
import { Route as StudentInstitutionsIndexRouteImport } from './routes/student/institutions.index'
import { Route as InstitutionUnitsIndexRouteImport } from './routes/institution/units.index'
import { Route as AdminInstitutionsIndexRouteImport } from './routes/admin/institutions.index'
import { Route as StudentInstitutionsInstitutionIdRouteImport } from './routes/student/institutions.$institutionId'
import { Route as StudentAdmitIdRouteImport } from './routes/student/admit.$id'
import { Route as InstitutionUnitsCreateRouteImport } from './routes/institution/units.create'
import { Route as InstitutionUnitsUnitIdRouteImport } from './routes/institution/units.$unitId'
import { Route as InstitutionApplicationsIdRouteImport } from './routes/institution/applications.$id'
import { Route as AdminInstitutionsInstitutionIdRouteImport } from './routes/admin/institutions.$institutionId'
import { Route as AuthStudentStudentLoginRouteImport } from './routes/_auth/student/studentLogin'
import { Route as AuthStudentRegistrationRouteImport } from './routes/_auth/student/registration'
import { Route as AuthInstitutionInstitutionLoginRouteImport } from './routes/_auth/institution/institutionLogin'
import { Route as AuthAdminAdminLoginRouteImport } from './routes/_auth/admin/adminLogin'
import { Route as InstitutionUnitsUnitIdEditRouteImport } from './routes/institution/units.$unitId.edit'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentRoute = StudentRouteImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const InstitutionRoute = InstitutionRouteImport.update({
  id: '/institution',
  path: '/institution',
  getParentRoute: () => rootRouteImport,
} as any)
const HelpRoute = HelpRouteImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const CookiesRoute = CookiesRouteImport.update({
  id: '/cookies',
  path: '/cookies',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentIndexRoute = StudentIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StudentRoute,
} as any)
const InstitutionIndexRoute = InstitutionIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => InstitutionRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentSettingsRoute = StudentSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => StudentRoute,
} as any)
const StudentInstitutionsRoute = StudentInstitutionsRouteImport.update({
  id: '/institutions',
  path: '/institutions',
  getParentRoute: () => StudentRoute,
} as any)
const StudentDashboardRoute = StudentDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => StudentRoute,
} as any)
const StudentApplicationsRoute = StudentApplicationsRouteImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => StudentRoute,
} as any)
const StudentAcademicInfoRoute = StudentAcademicInfoRouteImport.update({
  id: '/academic-info',
  path: '/academic-info',
  getParentRoute: () => StudentRoute,
} as any)
const InstitutionSettingsRoute = InstitutionSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => InstitutionRoute,
} as any)
const InstitutionProfileRoute = InstitutionProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => InstitutionRoute,
} as any)
const InstitutionDashboardRoute = InstitutionDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => InstitutionRoute,
} as any)
const InstitutionApplicationsRoute = InstitutionApplicationsRouteImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => InstitutionRoute,
} as any)
const AdminVisualizationRoute = AdminVisualizationRouteImport.update({
  id: '/admin/visualization',
  path: '/admin/visualization',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminProfileRoute = AdminProfileRouteImport.update({
  id: '/admin/profile',
  path: '/admin/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminInstitutionsRoute = AdminInstitutionsRouteImport.update({
  id: '/admin/institutions',
  path: '/admin/institutions',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminAdminsRoute = AdminAdminsRouteImport.update({
  id: '/admin/admins',
  path: '/admin/admins',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthUnauthorizedRoute = AuthUnauthorizedRouteImport.update({
  id: '/_auth/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentInstitutionsIndexRoute =
  StudentInstitutionsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => StudentInstitutionsRoute,
  } as any)
const InstitutionUnitsIndexRoute = InstitutionUnitsIndexRouteImport.update({
  id: '/units/',
  path: '/units/',
  getParentRoute: () => InstitutionRoute,
} as any)
const AdminInstitutionsIndexRoute = AdminInstitutionsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminInstitutionsRoute,
} as any)
const StudentInstitutionsInstitutionIdRoute =
  StudentInstitutionsInstitutionIdRouteImport.update({
    id: '/$institutionId',
    path: '/$institutionId',
    getParentRoute: () => StudentInstitutionsRoute,
  } as any)
const StudentAdmitIdRoute = StudentAdmitIdRouteImport.update({
  id: '/admit/$id',
  path: '/admit/$id',
  getParentRoute: () => StudentRoute,
} as any)
const InstitutionUnitsCreateRoute = InstitutionUnitsCreateRouteImport.update({
  id: '/units/create',
  path: '/units/create',
  getParentRoute: () => InstitutionRoute,
} as any)
const InstitutionUnitsUnitIdRoute = InstitutionUnitsUnitIdRouteImport.update({
  id: '/units/$unitId',
  path: '/units/$unitId',
  getParentRoute: () => InstitutionRoute,
} as any)
const InstitutionApplicationsIdRoute =
  InstitutionApplicationsIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => InstitutionApplicationsRoute,
  } as any)
const AdminInstitutionsInstitutionIdRoute =
  AdminInstitutionsInstitutionIdRouteImport.update({
    id: '/$institutionId',
    path: '/$institutionId',
    getParentRoute: () => AdminInstitutionsRoute,
  } as any)
const AuthStudentStudentLoginRoute = AuthStudentStudentLoginRouteImport.update({
  id: '/_auth/student/studentLogin',
  path: '/student/studentLogin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthStudentRegistrationRoute = AuthStudentRegistrationRouteImport.update({
  id: '/_auth/student/registration',
  path: '/student/registration',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthInstitutionInstitutionLoginRoute =
  AuthInstitutionInstitutionLoginRouteImport.update({
    id: '/_auth/institution/institutionLogin',
    path: '/institution/institutionLogin',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthAdminAdminLoginRoute = AuthAdminAdminLoginRouteImport.update({
  id: '/_auth/admin/adminLogin',
  path: '/admin/adminLogin',
  getParentRoute: () => rootRouteImport,
} as any)
const InstitutionUnitsUnitIdEditRoute =
  InstitutionUnitsUnitIdEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => InstitutionUnitsUnitIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/cookies': typeof CookiesRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/help': typeof HelpRoute
  '/institution': typeof InstitutionRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/student': typeof StudentRouteWithChildren
  '/terms': typeof TermsRoute
  '/unauthorized': typeof AuthUnauthorizedRoute
  '/admin/admins': typeof AdminAdminsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/institutions': typeof AdminInstitutionsRouteWithChildren
  '/admin/profile': typeof AdminProfileRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/visualization': typeof AdminVisualizationRoute
  '/institution/applications': typeof InstitutionApplicationsRouteWithChildren
  '/institution/dashboard': typeof InstitutionDashboardRoute
  '/institution/profile': typeof InstitutionProfileRoute
  '/institution/settings': typeof InstitutionSettingsRoute
  '/student/academic-info': typeof StudentAcademicInfoRoute
  '/student/applications': typeof StudentApplicationsRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/student/institutions': typeof StudentInstitutionsRouteWithChildren
  '/student/settings': typeof StudentSettingsRoute
  '/admin': typeof AdminIndexRoute
  '/institution/': typeof InstitutionIndexRoute
  '/student/': typeof StudentIndexRoute
  '/admin/adminLogin': typeof AuthAdminAdminLoginRoute
  '/institution/institutionLogin': typeof AuthInstitutionInstitutionLoginRoute
  '/student/registration': typeof AuthStudentRegistrationRoute
  '/student/studentLogin': typeof AuthStudentStudentLoginRoute
  '/admin/institutions/$institutionId': typeof AdminInstitutionsInstitutionIdRoute
  '/institution/applications/$id': typeof InstitutionApplicationsIdRoute
  '/institution/units/$unitId': typeof InstitutionUnitsUnitIdRouteWithChildren
  '/institution/units/create': typeof InstitutionUnitsCreateRoute
  '/student/admit/$id': typeof StudentAdmitIdRoute
  '/student/institutions/$institutionId': typeof StudentInstitutionsInstitutionIdRoute
  '/admin/institutions/': typeof AdminInstitutionsIndexRoute
  '/institution/units': typeof InstitutionUnitsIndexRoute
  '/student/institutions/': typeof StudentInstitutionsIndexRoute
  '/institution/units/$unitId/edit': typeof InstitutionUnitsUnitIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/cookies': typeof CookiesRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/help': typeof HelpRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/unauthorized': typeof AuthUnauthorizedRoute
  '/admin/admins': typeof AdminAdminsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/profile': typeof AdminProfileRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/visualization': typeof AdminVisualizationRoute
  '/institution/applications': typeof InstitutionApplicationsRouteWithChildren
  '/institution/dashboard': typeof InstitutionDashboardRoute
  '/institution/profile': typeof InstitutionProfileRoute
  '/institution/settings': typeof InstitutionSettingsRoute
  '/student/academic-info': typeof StudentAcademicInfoRoute
  '/student/applications': typeof StudentApplicationsRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/student/settings': typeof StudentSettingsRoute
  '/admin': typeof AdminIndexRoute
  '/institution': typeof InstitutionIndexRoute
  '/student': typeof StudentIndexRoute
  '/admin/adminLogin': typeof AuthAdminAdminLoginRoute
  '/institution/institutionLogin': typeof AuthInstitutionInstitutionLoginRoute
  '/student/registration': typeof AuthStudentRegistrationRoute
  '/student/studentLogin': typeof AuthStudentStudentLoginRoute
  '/admin/institutions/$institutionId': typeof AdminInstitutionsInstitutionIdRoute
  '/institution/applications/$id': typeof InstitutionApplicationsIdRoute
  '/institution/units/$unitId': typeof InstitutionUnitsUnitIdRouteWithChildren
  '/institution/units/create': typeof InstitutionUnitsCreateRoute
  '/student/admit/$id': typeof StudentAdmitIdRoute
  '/student/institutions/$institutionId': typeof StudentInstitutionsInstitutionIdRoute
  '/admin/institutions': typeof AdminInstitutionsIndexRoute
  '/institution/units': typeof InstitutionUnitsIndexRoute
  '/student/institutions': typeof StudentInstitutionsIndexRoute
  '/institution/units/$unitId/edit': typeof InstitutionUnitsUnitIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/cookies': typeof CookiesRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/help': typeof HelpRoute
  '/institution': typeof InstitutionRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/student': typeof StudentRouteWithChildren
  '/terms': typeof TermsRoute
  '/_auth/unauthorized': typeof AuthUnauthorizedRoute
  '/admin/admins': typeof AdminAdminsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/institutions': typeof AdminInstitutionsRouteWithChildren
  '/admin/profile': typeof AdminProfileRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/visualization': typeof AdminVisualizationRoute
  '/institution/applications': typeof InstitutionApplicationsRouteWithChildren
  '/institution/dashboard': typeof InstitutionDashboardRoute
  '/institution/profile': typeof InstitutionProfileRoute
  '/institution/settings': typeof InstitutionSettingsRoute
  '/student/academic-info': typeof StudentAcademicInfoRoute
  '/student/applications': typeof StudentApplicationsRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/student/institutions': typeof StudentInstitutionsRouteWithChildren
  '/student/settings': typeof StudentSettingsRoute
  '/admin/': typeof AdminIndexRoute
  '/institution/': typeof InstitutionIndexRoute
  '/student/': typeof StudentIndexRoute
  '/_auth/admin/adminLogin': typeof AuthAdminAdminLoginRoute
  '/_auth/institution/institutionLogin': typeof AuthInstitutionInstitutionLoginRoute
  '/_auth/student/registration': typeof AuthStudentRegistrationRoute
  '/_auth/student/studentLogin': typeof AuthStudentStudentLoginRoute
  '/admin/institutions/$institutionId': typeof AdminInstitutionsInstitutionIdRoute
  '/institution/applications/$id': typeof InstitutionApplicationsIdRoute
  '/institution/units/$unitId': typeof InstitutionUnitsUnitIdRouteWithChildren
  '/institution/units/create': typeof InstitutionUnitsCreateRoute
  '/student/admit/$id': typeof StudentAdmitIdRoute
  '/student/institutions/$institutionId': typeof StudentInstitutionsInstitutionIdRoute
  '/admin/institutions/': typeof AdminInstitutionsIndexRoute
  '/institution/units/': typeof InstitutionUnitsIndexRoute
  '/student/institutions/': typeof StudentInstitutionsIndexRoute
  '/institution/units/$unitId/edit': typeof InstitutionUnitsUnitIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/cookies'
    | '/forgot-password'
    | '/help'
    | '/institution'
    | '/privacy'
    | '/student'
    | '/terms'
    | '/unauthorized'
    | '/admin/admins'
    | '/admin/dashboard'
    | '/admin/institutions'
    | '/admin/profile'
    | '/admin/settings'
    | '/admin/visualization'
    | '/institution/applications'
    | '/institution/dashboard'
    | '/institution/profile'
    | '/institution/settings'
    | '/student/academic-info'
    | '/student/applications'
    | '/student/dashboard'
    | '/student/institutions'
    | '/student/settings'
    | '/admin'
    | '/institution/'
    | '/student/'
    | '/admin/adminLogin'
    | '/institution/institutionLogin'
    | '/student/registration'
    | '/student/studentLogin'
    | '/admin/institutions/$institutionId'
    | '/institution/applications/$id'
    | '/institution/units/$unitId'
    | '/institution/units/create'
    | '/student/admit/$id'
    | '/student/institutions/$institutionId'
    | '/admin/institutions/'
    | '/institution/units'
    | '/student/institutions/'
    | '/institution/units/$unitId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/cookies'
    | '/forgot-password'
    | '/help'
    | '/privacy'
    | '/terms'
    | '/unauthorized'
    | '/admin/admins'
    | '/admin/dashboard'
    | '/admin/profile'
    | '/admin/settings'
    | '/admin/visualization'
    | '/institution/applications'
    | '/institution/dashboard'
    | '/institution/profile'
    | '/institution/settings'
    | '/student/academic-info'
    | '/student/applications'
    | '/student/dashboard'
    | '/student/settings'
    | '/admin'
    | '/institution'
    | '/student'
    | '/admin/adminLogin'
    | '/institution/institutionLogin'
    | '/student/registration'
    | '/student/studentLogin'
    | '/admin/institutions/$institutionId'
    | '/institution/applications/$id'
    | '/institution/units/$unitId'
    | '/institution/units/create'
    | '/student/admit/$id'
    | '/student/institutions/$institutionId'
    | '/admin/institutions'
    | '/institution/units'
    | '/student/institutions'
    | '/institution/units/$unitId/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/cookies'
    | '/forgot-password'
    | '/help'
    | '/institution'
    | '/privacy'
    | '/student'
    | '/terms'
    | '/_auth/unauthorized'
    | '/admin/admins'
    | '/admin/dashboard'
    | '/admin/institutions'
    | '/admin/profile'
    | '/admin/settings'
    | '/admin/visualization'
    | '/institution/applications'
    | '/institution/dashboard'
    | '/institution/profile'
    | '/institution/settings'
    | '/student/academic-info'
    | '/student/applications'
    | '/student/dashboard'
    | '/student/institutions'
    | '/student/settings'
    | '/admin/'
    | '/institution/'
    | '/student/'
    | '/_auth/admin/adminLogin'
    | '/_auth/institution/institutionLogin'
    | '/_auth/student/registration'
    | '/_auth/student/studentLogin'
    | '/admin/institutions/$institutionId'
    | '/institution/applications/$id'
    | '/institution/units/$unitId'
    | '/institution/units/create'
    | '/student/admit/$id'
    | '/student/institutions/$institutionId'
    | '/admin/institutions/'
    | '/institution/units/'
    | '/student/institutions/'
    | '/institution/units/$unitId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  CookiesRoute: typeof CookiesRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  HelpRoute: typeof HelpRoute
  InstitutionRoute: typeof InstitutionRouteWithChildren
  PrivacyRoute: typeof PrivacyRoute
  StudentRoute: typeof StudentRouteWithChildren
  TermsRoute: typeof TermsRoute
  AuthUnauthorizedRoute: typeof AuthUnauthorizedRoute
  AdminAdminsRoute: typeof AdminAdminsRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminInstitutionsRoute: typeof AdminInstitutionsRouteWithChildren
  AdminProfileRoute: typeof AdminProfileRoute
  AdminSettingsRoute: typeof AdminSettingsRoute
  AdminVisualizationRoute: typeof AdminVisualizationRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AuthAdminAdminLoginRoute: typeof AuthAdminAdminLoginRoute
  AuthInstitutionInstitutionLoginRoute: typeof AuthInstitutionInstitutionLoginRoute
  AuthStudentRegistrationRoute: typeof AuthStudentRegistrationRoute
  AuthStudentStudentLoginRoute: typeof AuthStudentStudentLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student': {
      id: '/student'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/institution': {
      id: '/institution'
      path: '/institution'
      fullPath: '/institution'
      preLoaderRoute: typeof InstitutionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/help': {
      id: '/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cookies': {
      id: '/cookies'
      path: '/cookies'
      fullPath: '/cookies'
      preLoaderRoute: typeof CookiesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/': {
      id: '/student/'
      path: '/'
      fullPath: '/student/'
      preLoaderRoute: typeof StudentIndexRouteImport
      parentRoute: typeof StudentRoute
    }
    '/institution/': {
      id: '/institution/'
      path: '/'
      fullPath: '/institution/'
      preLoaderRoute: typeof InstitutionIndexRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/settings': {
      id: '/student/settings'
      path: '/settings'
      fullPath: '/student/settings'
      preLoaderRoute: typeof StudentSettingsRouteImport
      parentRoute: typeof StudentRoute
    }
    '/student/institutions': {
      id: '/student/institutions'
      path: '/institutions'
      fullPath: '/student/institutions'
      preLoaderRoute: typeof StudentInstitutionsRouteImport
      parentRoute: typeof StudentRoute
    }
    '/student/dashboard': {
      id: '/student/dashboard'
      path: '/dashboard'
      fullPath: '/student/dashboard'
      preLoaderRoute: typeof StudentDashboardRouteImport
      parentRoute: typeof StudentRoute
    }
    '/student/applications': {
      id: '/student/applications'
      path: '/applications'
      fullPath: '/student/applications'
      preLoaderRoute: typeof StudentApplicationsRouteImport
      parentRoute: typeof StudentRoute
    }
    '/student/academic-info': {
      id: '/student/academic-info'
      path: '/academic-info'
      fullPath: '/student/academic-info'
      preLoaderRoute: typeof StudentAcademicInfoRouteImport
      parentRoute: typeof StudentRoute
    }
    '/institution/settings': {
      id: '/institution/settings'
      path: '/settings'
      fullPath: '/institution/settings'
      preLoaderRoute: typeof InstitutionSettingsRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/institution/profile': {
      id: '/institution/profile'
      path: '/profile'
      fullPath: '/institution/profile'
      preLoaderRoute: typeof InstitutionProfileRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/institution/dashboard': {
      id: '/institution/dashboard'
      path: '/dashboard'
      fullPath: '/institution/dashboard'
      preLoaderRoute: typeof InstitutionDashboardRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/institution/applications': {
      id: '/institution/applications'
      path: '/applications'
      fullPath: '/institution/applications'
      preLoaderRoute: typeof InstitutionApplicationsRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/admin/visualization': {
      id: '/admin/visualization'
      path: '/admin/visualization'
      fullPath: '/admin/visualization'
      preLoaderRoute: typeof AdminVisualizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/profile': {
      id: '/admin/profile'
      path: '/admin/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/institutions': {
      id: '/admin/institutions'
      path: '/admin/institutions'
      fullPath: '/admin/institutions'
      preLoaderRoute: typeof AdminInstitutionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/admins': {
      id: '/admin/admins'
      path: '/admin/admins'
      fullPath: '/admin/admins'
      preLoaderRoute: typeof AdminAdminsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/unauthorized': {
      id: '/_auth/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof AuthUnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/institutions/': {
      id: '/student/institutions/'
      path: '/'
      fullPath: '/student/institutions/'
      preLoaderRoute: typeof StudentInstitutionsIndexRouteImport
      parentRoute: typeof StudentInstitutionsRoute
    }
    '/institution/units/': {
      id: '/institution/units/'
      path: '/units'
      fullPath: '/institution/units'
      preLoaderRoute: typeof InstitutionUnitsIndexRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/admin/institutions/': {
      id: '/admin/institutions/'
      path: '/'
      fullPath: '/admin/institutions/'
      preLoaderRoute: typeof AdminInstitutionsIndexRouteImport
      parentRoute: typeof AdminInstitutionsRoute
    }
    '/student/institutions/$institutionId': {
      id: '/student/institutions/$institutionId'
      path: '/$institutionId'
      fullPath: '/student/institutions/$institutionId'
      preLoaderRoute: typeof StudentInstitutionsInstitutionIdRouteImport
      parentRoute: typeof StudentInstitutionsRoute
    }
    '/student/admit/$id': {
      id: '/student/admit/$id'
      path: '/admit/$id'
      fullPath: '/student/admit/$id'
      preLoaderRoute: typeof StudentAdmitIdRouteImport
      parentRoute: typeof StudentRoute
    }
    '/institution/units/create': {
      id: '/institution/units/create'
      path: '/units/create'
      fullPath: '/institution/units/create'
      preLoaderRoute: typeof InstitutionUnitsCreateRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/institution/units/$unitId': {
      id: '/institution/units/$unitId'
      path: '/units/$unitId'
      fullPath: '/institution/units/$unitId'
      preLoaderRoute: typeof InstitutionUnitsUnitIdRouteImport
      parentRoute: typeof InstitutionRoute
    }
    '/institution/applications/$id': {
      id: '/institution/applications/$id'
      path: '/$id'
      fullPath: '/institution/applications/$id'
      preLoaderRoute: typeof InstitutionApplicationsIdRouteImport
      parentRoute: typeof InstitutionApplicationsRoute
    }
    '/admin/institutions/$institutionId': {
      id: '/admin/institutions/$institutionId'
      path: '/$institutionId'
      fullPath: '/admin/institutions/$institutionId'
      preLoaderRoute: typeof AdminInstitutionsInstitutionIdRouteImport
      parentRoute: typeof AdminInstitutionsRoute
    }
    '/_auth/student/studentLogin': {
      id: '/_auth/student/studentLogin'
      path: '/student/studentLogin'
      fullPath: '/student/studentLogin'
      preLoaderRoute: typeof AuthStudentStudentLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/student/registration': {
      id: '/_auth/student/registration'
      path: '/student/registration'
      fullPath: '/student/registration'
      preLoaderRoute: typeof AuthStudentRegistrationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/institution/institutionLogin': {
      id: '/_auth/institution/institutionLogin'
      path: '/institution/institutionLogin'
      fullPath: '/institution/institutionLogin'
      preLoaderRoute: typeof AuthInstitutionInstitutionLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/admin/adminLogin': {
      id: '/_auth/admin/adminLogin'
      path: '/admin/adminLogin'
      fullPath: '/admin/adminLogin'
      preLoaderRoute: typeof AuthAdminAdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/institution/units/$unitId/edit': {
      id: '/institution/units/$unitId/edit'
      path: '/edit'
      fullPath: '/institution/units/$unitId/edit'
      preLoaderRoute: typeof InstitutionUnitsUnitIdEditRouteImport
      parentRoute: typeof InstitutionUnitsUnitIdRoute
    }
  }
}

interface InstitutionApplicationsRouteChildren {
  InstitutionApplicationsIdRoute: typeof InstitutionApplicationsIdRoute
}

const InstitutionApplicationsRouteChildren: InstitutionApplicationsRouteChildren =
  {
    InstitutionApplicationsIdRoute: InstitutionApplicationsIdRoute,
  }

const InstitutionApplicationsRouteWithChildren =
  InstitutionApplicationsRoute._addFileChildren(
    InstitutionApplicationsRouteChildren,
  )

interface InstitutionUnitsUnitIdRouteChildren {
  InstitutionUnitsUnitIdEditRoute: typeof InstitutionUnitsUnitIdEditRoute
}

const InstitutionUnitsUnitIdRouteChildren: InstitutionUnitsUnitIdRouteChildren =
  {
    InstitutionUnitsUnitIdEditRoute: InstitutionUnitsUnitIdEditRoute,
  }

const InstitutionUnitsUnitIdRouteWithChildren =
  InstitutionUnitsUnitIdRoute._addFileChildren(
    InstitutionUnitsUnitIdRouteChildren,
  )

interface InstitutionRouteChildren {
  InstitutionApplicationsRoute: typeof InstitutionApplicationsRouteWithChildren
  InstitutionDashboardRoute: typeof InstitutionDashboardRoute
  InstitutionProfileRoute: typeof InstitutionProfileRoute
  InstitutionSettingsRoute: typeof InstitutionSettingsRoute
  InstitutionIndexRoute: typeof InstitutionIndexRoute
  InstitutionUnitsUnitIdRoute: typeof InstitutionUnitsUnitIdRouteWithChildren
  InstitutionUnitsCreateRoute: typeof InstitutionUnitsCreateRoute
  InstitutionUnitsIndexRoute: typeof InstitutionUnitsIndexRoute
}

const InstitutionRouteChildren: InstitutionRouteChildren = {
  InstitutionApplicationsRoute: InstitutionApplicationsRouteWithChildren,
  InstitutionDashboardRoute: InstitutionDashboardRoute,
  InstitutionProfileRoute: InstitutionProfileRoute,
  InstitutionSettingsRoute: InstitutionSettingsRoute,
  InstitutionIndexRoute: InstitutionIndexRoute,
  InstitutionUnitsUnitIdRoute: InstitutionUnitsUnitIdRouteWithChildren,
  InstitutionUnitsCreateRoute: InstitutionUnitsCreateRoute,
  InstitutionUnitsIndexRoute: InstitutionUnitsIndexRoute,
}

const InstitutionRouteWithChildren = InstitutionRoute._addFileChildren(
  InstitutionRouteChildren,
)

interface StudentInstitutionsRouteChildren {
  StudentInstitutionsInstitutionIdRoute: typeof StudentInstitutionsInstitutionIdRoute
  StudentInstitutionsIndexRoute: typeof StudentInstitutionsIndexRoute
}

const StudentInstitutionsRouteChildren: StudentInstitutionsRouteChildren = {
  StudentInstitutionsInstitutionIdRoute: StudentInstitutionsInstitutionIdRoute,
  StudentInstitutionsIndexRoute: StudentInstitutionsIndexRoute,
}

const StudentInstitutionsRouteWithChildren =
  StudentInstitutionsRoute._addFileChildren(StudentInstitutionsRouteChildren)

interface StudentRouteChildren {
  StudentAcademicInfoRoute: typeof StudentAcademicInfoRoute
  StudentApplicationsRoute: typeof StudentApplicationsRoute
  StudentDashboardRoute: typeof StudentDashboardRoute
  StudentInstitutionsRoute: typeof StudentInstitutionsRouteWithChildren
  StudentSettingsRoute: typeof StudentSettingsRoute
  StudentIndexRoute: typeof StudentIndexRoute
  StudentAdmitIdRoute: typeof StudentAdmitIdRoute
}

const StudentRouteChildren: StudentRouteChildren = {
  StudentAcademicInfoRoute: StudentAcademicInfoRoute,
  StudentApplicationsRoute: StudentApplicationsRoute,
  StudentDashboardRoute: StudentDashboardRoute,
  StudentInstitutionsRoute: StudentInstitutionsRouteWithChildren,
  StudentSettingsRoute: StudentSettingsRoute,
  StudentIndexRoute: StudentIndexRoute,
  StudentAdmitIdRoute: StudentAdmitIdRoute,
}

const StudentRouteWithChildren =
  StudentRoute._addFileChildren(StudentRouteChildren)

interface AdminInstitutionsRouteChildren {
  AdminInstitutionsInstitutionIdRoute: typeof AdminInstitutionsInstitutionIdRoute
  AdminInstitutionsIndexRoute: typeof AdminInstitutionsIndexRoute
}

const AdminInstitutionsRouteChildren: AdminInstitutionsRouteChildren = {
  AdminInstitutionsInstitutionIdRoute: AdminInstitutionsInstitutionIdRoute,
  AdminInstitutionsIndexRoute: AdminInstitutionsIndexRoute,
}

const AdminInstitutionsRouteWithChildren =
  AdminInstitutionsRoute._addFileChildren(AdminInstitutionsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  CookiesRoute: CookiesRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  HelpRoute: HelpRoute,
  InstitutionRoute: InstitutionRouteWithChildren,
  PrivacyRoute: PrivacyRoute,
  StudentRoute: StudentRouteWithChildren,
  TermsRoute: TermsRoute,
  AuthUnauthorizedRoute: AuthUnauthorizedRoute,
  AdminAdminsRoute: AdminAdminsRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminInstitutionsRoute: AdminInstitutionsRouteWithChildren,
  AdminProfileRoute: AdminProfileRoute,
  AdminSettingsRoute: AdminSettingsRoute,
  AdminVisualizationRoute: AdminVisualizationRoute,
  AdminIndexRoute: AdminIndexRoute,
  AuthAdminAdminLoginRoute: AuthAdminAdminLoginRoute,
  AuthInstitutionInstitutionLoginRoute: AuthInstitutionInstitutionLoginRoute,
  AuthStudentRegistrationRoute: AuthStudentRegistrationRoute,
  AuthStudentStudentLoginRoute: AuthStudentStudentLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
