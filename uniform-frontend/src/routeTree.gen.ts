/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StudentIndexRouteImport } from './routes/student/index'
import { Route as StudentDashboardRouteImport } from './routes/student/dashboard'
import { Route as AuthUnauthorizedRouteImport } from './routes/_auth/unauthorized'
import { Route as AuthStudentLoginRouteImport } from './routes/_auth/studentLogin'
import { Route as AuthRegistrationRouteImport } from './routes/_auth/registration'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentIndexRoute = StudentIndexRouteImport.update({
  id: '/student/',
  path: '/student/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentDashboardRoute = StudentDashboardRouteImport.update({
  id: '/student/dashboard',
  path: '/student/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthUnauthorizedRoute = AuthUnauthorizedRouteImport.update({
  id: '/_auth/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthStudentLoginRoute = AuthStudentLoginRouteImport.update({
  id: '/_auth/studentLogin',
  path: '/studentLogin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegistrationRoute = AuthRegistrationRouteImport.update({
  id: '/_auth/registration',
  path: '/registration',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/registration': typeof AuthRegistrationRoute
  '/studentLogin': typeof AuthStudentLoginRoute
  '/unauthorized': typeof AuthUnauthorizedRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/student': typeof StudentIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/registration': typeof AuthRegistrationRoute
  '/studentLogin': typeof AuthStudentLoginRoute
  '/unauthorized': typeof AuthUnauthorizedRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/student': typeof StudentIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/registration': typeof AuthRegistrationRoute
  '/_auth/studentLogin': typeof AuthStudentLoginRoute
  '/_auth/unauthorized': typeof AuthUnauthorizedRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/student/': typeof StudentIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/registration'
    | '/studentLogin'
    | '/unauthorized'
    | '/student/dashboard'
    | '/student'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/registration'
    | '/studentLogin'
    | '/unauthorized'
    | '/student/dashboard'
    | '/student'
  id:
    | '__root__'
    | '/'
    | '/_auth/login'
    | '/_auth/registration'
    | '/_auth/studentLogin'
    | '/_auth/unauthorized'
    | '/student/dashboard'
    | '/student/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegistrationRoute: typeof AuthRegistrationRoute
  AuthStudentLoginRoute: typeof AuthStudentLoginRoute
  AuthUnauthorizedRoute: typeof AuthUnauthorizedRoute
  StudentDashboardRoute: typeof StudentDashboardRoute
  StudentIndexRoute: typeof StudentIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/': {
      id: '/student/'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/dashboard': {
      id: '/student/dashboard'
      path: '/student/dashboard'
      fullPath: '/student/dashboard'
      preLoaderRoute: typeof StudentDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/unauthorized': {
      id: '/_auth/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof AuthUnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/studentLogin': {
      id: '/_auth/studentLogin'
      path: '/studentLogin'
      fullPath: '/studentLogin'
      preLoaderRoute: typeof AuthStudentLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/registration': {
      id: '/_auth/registration'
      path: '/registration'
      fullPath: '/registration'
      preLoaderRoute: typeof AuthRegistrationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegistrationRoute: AuthRegistrationRoute,
  AuthStudentLoginRoute: AuthStudentLoginRoute,
  AuthUnauthorizedRoute: AuthUnauthorizedRoute,
  StudentDashboardRoute: StudentDashboardRoute,
  StudentIndexRoute: StudentIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
